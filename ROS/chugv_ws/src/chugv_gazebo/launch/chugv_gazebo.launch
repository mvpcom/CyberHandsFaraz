<launch>
  <!-- roslaunch arguments -->
  <arg name="show_rviz" default="true"/>
  <arg name="paused" default="false"/>
  <arg name="debug" default="false"/>  
  <arg name="gui" default="true"/>
 
  <!-- We resume the logic in empty_world.launch, changing only the name of 
    the world to be launched -->
  <!-- file="$(find gazebo_ros)/launch/empty_world.launch" -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!--arg name="world_name" value="worlds/empty.world" /-->
    <arg name="world_name" value="$(find chugv_gazebo)/worlds/map.world" />
    <arg name="paused" value="$(arg paused)" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />    
    <arg name="use_sim_time" value="true" />
    <arg name="headless" value="false" />
  </include>
 
  <!-- urdf xml robot description loaded on the Parameter Server-->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find chugv_description)/urdf/chugv.urdf.xacro'" />
 
  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="chugv_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" 
    args="-urdf -param robot_description -model chugv" />
 
  <!-- robot visualization in Rviz -->
  <group if="$(arg show_rviz)">
    <node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find chugv_gazebo)/launch/chugv.rviz"/> 
 
    <!-- load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find chugv_control)/config/joint_position_control.yaml" command="load" />
    <!-- load the controllers -->
    <node name="chugv_controller" pkg="controller_manager" type="spawner" output="screen" 
      args="joint_state_controller" />
 
    <!-- publish all the frames to TF -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher">
      <param name="publish_frequency" value="50"/> <!-- Hz -->
    </node>

<!-- Hokuyo Driver --> 
   <!--node name="hokuyo" pkg="hokuyo_node" type="hokuyo_node" respawn="false" output="screen">
   <param name="calibrate_time" type="bool" value="true"/> 
   <param name="port" type="string" value="/dev/ttyACM0"/> 
   <param name="intensity" type="bool" value="false"/>
   <param name="min_ang" value="-2.356194437"/>   
   <param name="max_ang" value="2.35619443"/>    
   <param name="cluster" value="1"/>
   </node-->

  </group>
</launch>
